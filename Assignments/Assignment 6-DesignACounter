;-------------------------
; Title: Counter
;-------------------------
; Purpose:
; This program takes checks for two switches, switch A and switch B, and changes
; the 7-segment display accordingly to which switch is pressed. When switch A is
; pressed, the number displayed counts up, when switch B is pressed, the display
; counts down, when both are pressed the counter resets to zero. When none are
; pressed, then the counter doesn't change.
; Dependencies: CounterConfigFile.inc
; Compiler: MPLAB X IDE v6.20: pic-as (v2.46)
; Author: Alex Juarez
; OUTPUTS: PORTD
; INPUTS: PORTB 0, PORTB 1
; Version:
;   V1.0: 03/22/2024 - First version
;   V2.0: 03/26/2024 - Second version: Swicthed to using Table Pointers instead of FSR
;-------------------------


;-------------------------
;   Initialization
;-------------------------
#include "./CounterConfigFile.inc"
#include <xc.inc>

PSECT absdata,abs,ovrld  
;config statements should precede project file includes. 
    
;---------------------
; Program Inputs
;---------------------
ORG	    0X10
#define	    Switch1	    PORTB,0
#define	    Switch2	    PORTB,1
    
;---------------------
; Programs Constants
;---------------------
R1 EQU 0x21	    ; Inner most Loop Counter for DELAY_SEC
R2 EQU 0x22	    ; Inner Loop Counter for DELAY_SEC
R3 EQU 0x23	    ; Outer Loop Counter for DELAY_SEC
R4 EQU 0x24	    ; Main Loop Counter for DELAY_SEC
D   EQU	0X01
MAX	    EQU	    0X32
MIN	    EQU	    0X33    
	    
;---------------------
; Main Program
;---------------------
	    
;--------Setup Ports and Table Pointers    
    ORG	0x0
    RCALL	_setupPortD
    RCALL	_setupPortB
	    
    MOVLW   0XE0
    MOVWF   TBLPTR,0
    MOVLW   0XE0
    MOVWF   MAX,0
    MOVLW   0XF0
    MOVWF   MIN,0
    CALL    DATASET
    CALL    RESET0
	    
	    
CHECK:
    BTFSC   Switch1
    GOTO    CHECK1
    BTFSC   Switch2
    CALL    DECREASE
    GOTO    CHECK
  
CHECK1:
    BTFSS   Switch2
    CALL    INCREASE
    GOTO    RESET0
    
;--------Resets counter to "0"
RESET0:
    MOVLW   0X01
    MOVWF   TBLPTRH
    MOVLW   0XE0
    MOVWF   TBLPTR,0
    TBLRD*
    MOVF    TABLAT,0,0
    MOVFF   WREG,PORTD
    GOTO    CHECK
    
;--------Loops back to set counter to "F"
RESET1:
    MOVLW   0XEF
    MOVWF   TBLPTR,0
    TBLRD*
    MOVF    TABLAT,0,0
    MOVFF   WREG,PORTD
    GOTO    CHECK
    
;--------Increases the counter
INCREASE:
    TBLRD+*
    MOVF    TBLPTR,0,0
    CALL    ROLLOVCNT	
    TBLRD*
    MOVFF   TABLAT,WREG
    MOVFF   WREG,PORTD
    CALL    DELAY
    GOTO    CHECK
    
;--------Decreases the counter
DECREASE:
    MOVF    TBLPTR,0,0
    CALL    ROLLOVCNT
    TBLRD*-
    TBLRD*
    MOVF    TABLAT,0,0
    MOVFF   WREG,PORTD
    CALL    DELAY
    GOTO    CHECK

;--------Subroutine to create the delay
DELAY:	
    MOVLW   0X01   
    MOVWF   R4
L_1:	; MAIN loop in the subroutine to generate a delay of R4 secs
    MOVLW 1
    MOVWF R3	
L_2:	; outer loop generates a delay of 1 sec
    MOVLW 1
    MOVWF R2	
L_3:	; inner loop generates a delay of 100 msecs
    MOVLW 1
    MOVWF R1
L_4:	; inner most loop generates a delay of 1 msecs
    NOP
    NOP
    DECF R1, F
    BNZ L_4
    DECF R2, F
    BNZ L_3
    DECF R3, F
    BNZ L_2	
    DECF R4, F
    BNZ L_1	
    RETURN
    
_setupPortD:
    BANKSEL	PORTD ;
    CLRF	PORTD ;Init PORTA
    BANKSEL	LATD ;Data Latch
    CLRF	LATD ;
    BANKSEL	ANSELD ;
    CLRF	ANSELD ;digital I/O
    BANKSEL	TRISD ;
    MOVLW	0b00000000 ;Set RD[7:1] as outputs
    MOVWF	TRISD ;and set RD0 as ouput
    RETURN
    
_setupPortB:
    BANKSEL	PORTB ;
    CLRF	PORTB ;Init PORTB
    BANKSEL	LATB ;Data Latch
    CLRF	LATB ;
    BANKSEL	ANSELB ;
    CLRF	ANSELB ;digital I/O
    BANKSEL	TRISB ;
    MOVLW	0b11111111 ;
    MOVWF	TRISB ;
    RETURN

     
ROLLOVCNT:  ; USE TO CHECK IF OV IS DETECTED 
    MOVF    TBLPTR,1,0
    SUBLW   0XE0
    BZ	    RESET1
    MOVF    TBLPTR,0,0
    SUBLW   0XF0
    BZ	    RESET0
    MOVF    TBLPTR,1,0
    RETURN
    
DATASET: ; SETS THE SEVEN SEGMENT DISPLAY OUTPUTS 
    ORG	    0X1E0
    DB	    0X3F, 0X06, 0X5B, 0X4F, 0X66, 0X6D, 0X7D, 0X07, 0X7F, 0X6F, 0x77, 0X7C, 0x39, 0x5E, 0x79, 0x71
    
    
    RETURN   
   
END
